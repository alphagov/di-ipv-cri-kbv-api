AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  di-ipv-cri-kbv-api
  SAM Template for the kbv api

Globals:
  Api:
    Auth:
      DefaultAuthorizer: AWS_IAM
  Function:
    Timeout: 60

Resources:

  ServerlessRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Body:
        info:
          version: '1.0'
          title: !Ref 'AWS::StackName'
        paths:
          /session:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub >-
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CriSessionFunction.Arn}/invocations
                credentials: 'arn:aws:iam::*:user/*'
              security:
                - AWS_IAM: [ ]
              responses: { }
        swagger: '2.0'

  CriSessionTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: session
      PrimaryKey:
        Name: id
        Type: String

  CriKbvFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CriSessionFunction
      Principal: apigateway.amazonaws.com

  CriSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: uk.gov.di.cri.experian.kbv.api.handler.SessionHandler::handleRequest
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
      Runtime: java11
      MemorySize: 512
      Tracing: Active
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-kbv-api
          EXPERIAN_API_WRAPPER_SAA_RESOURCE: http://localhost:8080/question-request
          EXPERIAN_API_WRAPPER_RTQ_RESOURCE: http://localhost:8080/question-answer
          EXPERIAN_API_WRAPPER_URL: http://localhost:8080/

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CriSessionApi:
    Description: "API Gateway endpoint URL for Prod stage for CriSession function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/cri-session/"
  CriSessionFunction:
    Description: " CriSession check lambda function ARN"
    Value: !GetAtt CriSessionFunction.Arn
  CriSessionFunctionIamRole:
    Description: "Implicit IAM Role created for CriSession function"
    Value: !GetAtt CriSessionFunction.Arn