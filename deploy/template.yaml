AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  di-ipv-cri-kbv-api
  SAM Template for the kbv api v0.5

Globals:
  Function:
    Timeout: 60
    Runtime: java11
    MemorySize: 512
    Tracing: Active
    Environment:
      Variables:
        AWS_STACK_NAME: !Sub ${AWS::StackName}
        POWERTOOLS_LOG_LEVEL: INFO

Conditions:
  CreateDevResources: !Equals
    - !Ref Environment
    - dev
  IsStubEnvironment: !Or
    - !Equals [ !Ref Environment, dev]
    - !Equals [ !Ref Environment, build ]
  IsProdLikeEnvironment:
    !Not [Condition: IsStubEnvironment]

Mappings:
  SessionTtlMapping:
    Environment:
      dev: "172800" # 2 days
#        build: "172800" # 2 days
#        staging: "172800" # 2 days
#        integration: "172800" # 2 days
#        production: "172800" # 2 days

  IPVCoreStubAudienceMapping:
    Environment:
      dev: "https://dev.kbv.cri.account.gov.uk"
      build: "https://build.kbv.cri.account.gov.uk"

  IPVCoreStubAuthenticationAlgMapping:
    Environment:
      dev: "ES256"
      build: "ES256"

  IPVCoreStubIssuerMapping:
    Environment:
      dev: "ipv-core-stub"
      build: "ipv-core-stub"

  IPVCoreStubPublicSigningJwkBase64Mapping:
    Environment:
      dev: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0xLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogIklmUjFQejlPdWNJMll3YldKVGEtT3h0MDJ6X3pnTkR5RmtocGZ3OFFXcjAiLAogICAgInkiOiAiWGo2alJ6S0EwUWVTTEMtZTE1bVg3U2hucG9xZ0c4d1F3ZWcwNlhJYTBEcyIsCiAgICAiYWxnIjogIkVTMjU2Igp9"
      build: "ewogICAgImt0eSI6ICJFQyIsCiAgICAidXNlIjogInNpZyIsCiAgICAiY3J2IjogIlAtMjU2IiwKICAgICJraWQiOiAiaXB2LWNvcmUtc3R1Yi0xLWZyb20tbWtqd2sub3JnIiwKICAgICJ4IjogIklmUjFQejlPdWNJMll3YldKVGEtT3h0MDJ6X3pnTkR5RmtocGZ3OFFXcjAiLAogICAgInkiOiAiWGo2alJ6S0EwUWVTTEMtZTE1bVg3U2hucG9xZ0c4d1F3ZWcwNlhJYTBEcyIsCiAgICAiYWxnIjogIkVTMjU2Igp9"

  IPVCoreStubRedirectURIMapping:
    Environment:
      dev: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
      build: "https://di-ipv-core-stub.london.cloudapps.digital/callback"

  KBVCriAudienceMapping:
    Environment:
      dev: "https://dev.kbv.cri.account.gov.uk"
      build: "kbv-cri-build"
      staging: "kbv-cri-staging"
      integration: "kbv-cri-integration"
      production: "kbv-cri"


Parameters:
  Environment:
    Description: environment name
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - staging
      - integration
      - prod
    ConstraintDescription: specify dev, staging, integration or prod for environment

Resources:

  KBVSessionApi:
    Type: AWS::Serverless::Api
    Properties:
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 5
          ThrottlingBurstLimit: 10
      AccessLogSetting:
        DestinationArn: !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${ApiAccessLogGroup}'
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      TracingEnabled: true
      Name: !Sub "KBVSessionApi-${Environment}"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  ApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/AccessLog-${KBVSessionApi}/${Environment}
      RetentionInDays: 365

  SessionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "session-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
        - AttributeName: "authorizationCode"
          AttributeType: "S"
        - AttributeName: "accessToken"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "authorizationCode-index"
          KeySchema:
            - AttributeName: "authorizationCode"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
              - "redirectUri"
            ProjectionType: "INCLUDE"
        - IndexName: "access-token-index"
          KeySchema:
            - AttributeName: "accessToken"
              KeyType: "HASH"
          Projection:
            NonKeyAttributes:
              - "sessionId"
            ProjectionType: "INCLUDE"
      TimeToLiveSpecification:
        AttributeName: expiry-date
        Enabled: true

  KBVCriDecryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Asymmetric key used by KBV CRI to decrypt the Authorization JAR JWE
      Enabled: true
      KeySpec: RSA_2048
      KeyUsage: ENCRYPT_DECRYPT
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Enable Root access'
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - 'kms:*'
            Resource: '*'
      Tags:
        - Key: "jwkset"
          Value: "true"
        - Key: "awsStackName"
          Value: !Sub "${AWS::StackName}"

  DecryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/KBVCriDecryptionKey
      TargetKeyId: !Ref KBVCriDecryptionKey

  SessionTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/SessionTtl"
      Type: String
      Value: !FindInMap [ SessionTtlMapping, Environment, !Ref 'Environment' ]
      Description: default time to live for an address session item (seconds)

  KBVCriAudienceParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/KBVCriAudience"
      Type: String
      Value: !FindInMap [ KBVCriAudienceMapping, Environment, !Ref 'Environment' ]
      Description: The KBV credential issuer (audience) identifier

  KBVSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: /Users/amanmohammed/workspace/techaman/gds/code/di-ipv-cri-address-api/lambdas/session/build/distributions/session.zip
      Handler: uk.gov.di.ipv.cri.address.api.handler.SessionHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_METRICS_NAMESPACE: di-ipv-cri-kbv-api
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-kbv-api-session
          SQS_AUDIT_EVENT_QUEUE_URL: !ImportValue AuditEventQueueUrl
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName:
              Ref: SessionTable
        - SQSSendMessagePolicy:
            QueueName: !ImportValue AuditEventQueueName
        - KMSDecryptPolicy:
            KeyId: !Ref KBVCriDecryptionKey
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AddressCriAudience"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/AuthRequestKmsEncryptionKeyId"
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - 'kms:Decrypt'
                - 'kms:GenerateDataKey'
              Resource:
                - !ImportValue AuditEventQueueEncryptionKeyArn

  SessionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt KBVSessionFunction.Arn
      Principal: apigateway.amazonaws.com

  KBVQuestionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/question
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.QuestionHandler::handleRequest
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionTable
      Environment:
        Variables:
          IS_LOCAL: false
          KBV_SESSION_TABLE_NAME: !Ref SessionTable
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-kbv-api
          EXPERIAN_API_WRAPPER_SAA_RESOURCE: /question-request
          EXPERIAN_API_WRAPPER_URL: https://zn3dus332j.execute-api.eu-west-2.amazonaws.com/dev
      Events:
        KBVQuestionFunctionApi:
          Type: Api
          Properties:
            Path: /question
            Method: get
            RestApiId: !Ref KBVSessionApi

  KBVAnswerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/answer
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.QuestionAnswerHandler::handleRequest
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionTable
      Environment:
        Variables:
          IS_LOCAL: false
          KBV_SESSION_TABLE_NAME: !Ref SessionTable
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-kbv-api
          EXPERIAN_API_WRAPPER_RTQ_RESOURCE: /question-answer
          EXPERIAN_API_WRAPPER_URL: https://zn3dus332j.execute-api.eu-west-2.amazonaws.com/dev
      Events:
        KBVAnswerFunctionApi:
          Type: Api
          Properties:
            Path: /answer
            Method: post
            RestApiId: !Ref KBVSessionApi

  KBVFunctionsCodeSigning:
    Type: AWS::Lambda::CodeSigningConfig
    Properties:
      Description: "Code Signing for KBV API Functions"
      AllowedPublishers:
        SigningProfileVersionArns:
          - "{{resolve:ssm:/dev/credentialIssuers/cri/sam/signingProfileVersionArn}}"
      CodeSigningPolicies:
        UntrustedArtifactOnDeployment: "Enforce"

  ParameterSessionTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/SessionTableName"
      Value: !Sub session-${AWS::StackName}
      Type: String
      Description: session dynamodb table name

  ParameterIPVCoreStubPublicCertificateToVerify:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/publicCertificateToVerify
      Value: MIIFVjCCAz4CCQDGbJ/u6uFT6DANBgkqhkiG9w0BAQsFADBtMQswCQYDVQQGEwJHQjENMAsGA1UECAwEVGVzdDENMAsGA1UEBwwEVGVzdDENMAsGA1UECgwEVEVzdDENMAsGA1UECwwEVEVzdDENMAsGA1UEAwwEVEVzdDETMBEGCSqGSIb3DQEJARYEVGVzdDAeFw0yMjAxMDcxNTM0NTlaFw0yMzAxMDcxNTM0NTlaMG0xCzAJBgNVBAYTAkdCMQ0wCwYDVQQIDARUZXN0MQ0wCwYDVQQHDARUZXN0MQ0wCwYDVQQKDARURXN0MQ0wCwYDVQQLDARURXN0MQ0wCwYDVQQDDARURXN0MRMwEQYJKoZIhvcNAQkBFgRUZXN0MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAy1cVZ1KfFmgFlDQyf/R3LF/Js6jAS2Zzbs8WGSS0ys6Z+XR4x5DTIznZp5cHuuQmqOFylXSw5oGBwMXd2L6NimG9rJnJ4w8Gy5A6ImGsiDZC+3AXRBb5hq/IdDTBjbUqRxAKokSVwotWZt554BdSRPTmlYDujzxnClNKA06Xb/X3rTsgCUmZhUnSVtOzKytP3Bdv88VI5gq5tlZOtKXCB0PnJOqRbBmuL1RNkeTny4ZJW3I2ywSATwDDyDm4pJ8XGGNFKaYYTwr6uNTQ2VHb1FVC33oWbg+Zu9D4p5l7ONicCCF3V+GbvmyeCmHGnXznz0nYX1LFqaKtruEh3/GXyLy5X03Jzq6HhTf1SNFBmzziuCovhbR4v5aFDqAYNPWz+ajOdTUfP1I18c5jR1xGUxEiiLKBZWU1J5mhqCa+0CdI0mi3HwFmluudh47I2Xw++JiqZQpxRqNGcKJOPnWDgKOKXQ/ag37aJkxqoYWk9pQ/pXOdIKm//+B//8nWGo8BA/bfdmMHyzhWWxqtydjie2EZ5ODSdQ+yu1xU5cwP59BEQoU7FKVEGiJa4kzrsI2cgloUPlsPfLENMa5i09exDo//eDB/zNy9ACgGCriov1ex3uv4vHp3WtpZYe+akGEJeP0N5dejs0hkBuX+LUcM30TnQ424tEzcuaJ1F7r4FP0CAwEAATANBgkqhkiG9w0BAQsFAAOCAgEAUh5gZx8S/XoZZoQai2uTyW/lyr1LpXMQyfvdWRr5+/OtFuASG3fAPXOTiUfuqH6Uma8BaXPRbSGWxBOFg0EbyvUY4UczZXZgVqyzkGjD2bVcnGra1OHz2AkcJm7OvzjMUvmXdDiQ8WcKIH16BZVsJFveTffJbM/KxL9UUdSLT0fNw1OvZWN1LxRj+X16B26ZnmaXPdmEC8MfwNcEU63qSlIbAvLg9Dp03weqO1qWR1vI/n1jwqidCUVwT0XF88/pJrds8/8guKlawhp9Yv+jMVYaawBiALR+5PFN56DivtmSVI5uv3oFh5tqJXXn9PhsPcIq0YKGQvvcdZl7vCikS65VzmswXBVFJNsYeeZ5NmiH2ANQd4+BLetgLAoXZxaOJ4nK+3Ml+gMwpZRRAbtixKJQDtVy+Ahuh1TEwTS1CERDYq43LhVYbMcgxdOLpZLvMew2tvJc3HfSWQKuF+NjGn/RwG54GyhjpdbfNZMB/EJXNJMt1j9RSVbPLsWjaENUkZoXE0otSou9tJOR0fwoqBJGUi5GCp98+iBdIQMAvXW5JkoDS6CM1FOfSv9ZXLvfXHOuBfKTDeVNy7u3QvyJ+BdkSc0iH4gj1F2zLHNIaZbDzwRzcDf2s3D1wTtoJ/WxfRSLGBMuUsXSduh9Md1S862N3Ce6wpri1IsgySCP84Y=
      Type: String

  IPVCoreStubAuthenticationAlgParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/authenticationAlg"
      Type: String
      Value: !FindInMap [ IPVCoreStubAuthenticationAlgMapping, Environment, !Ref 'Environment' ]

  IPVCoreStubAudienceParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/audience"
      Type: String
      Value: !FindInMap [ IPVCoreStubAudienceMapping, Environment, !Ref 'Environment' ]

  IPVCoreStubIssuerParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/issuer"
      Type: String
      Value: !FindInMap [ IPVCoreStubIssuerMapping, Environment, !Ref 'Environment' ]

  IPVCoreStubPublicSigningJwkBase64Parameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/publicSigningJwkBase64"
      Type: String
      Value: !FindInMap [ IPVCoreStubPublicSigningJwkBase64Mapping, Environment, !Ref 'Environment' ]

  IPVCoreStubRedirectURIParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/redirectUri"
      Type: String
      Value: !FindInMap [ IPVCoreStubRedirectURIMapping, Environment, !Ref 'Environment' ]

  AuthRequestKmsEncryptionKeyIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/AuthRequestKmsEncryptionKeyId"
      Type: String
      Value: !Ref KBVCriDecryptionKey
      Description: The (KMS) encryption key identifier for decrypting authorisation requests

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  KBVSessionApi:
    Description: "API Gateway endpoint URL for KBV API functions to be consumed primarily by the frontend"
    Value: !Sub "https://${KBVSessionApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
  KBVSessionFunction:
    Description: "KBVSessionFunction lambda ARN"
    Value: !GetAtt KBVSessionFunction.Arn
  KBVQuestionFunction:
    Description: "KBVQuestionFunction lambda ARN"
    Value: !GetAtt KBVQuestionFunction.Arn
  KBVAnswerFunction:
    Description: "KBVAnswerFunction lambda ARN"
    Value: !GetAtt KBVAnswerFunction.Arn
