AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  di-ipv-cri-kbv-api
  SAM Template for the kbv api v0.4

Globals:
  Function:
    Timeout: 60
    Runtime: java11
    MemorySize: 512
    Tracing: Active

Parameters:
  Environment:
    Description: environment name
    Default: dev
    Type: String
    AllowedValues:
      - dev
      - staging
      - integration
      - prod
    ConstraintDescription: specify dev, staging, integration or prod for environment

Resources:

  KBVSessionApi:
    Type: AWS::Serverless::Api
    Properties:
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: '/*'
          HttpMethod: '*'
      AccessLogSetting:
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      TracingEnabled: true
      Name: !Sub "KBVSessionApi-${Environment}"
      StageName: !Ref Environment
      DefinitionBody:
        openapi: "3.0.1" # workaround to get `sam validate` to work
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { } # workaround to get `sam validate` to work
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './api.yaml'
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL

  KBVSessionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "kbv-session-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        -
          AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "expiryDate"
        Enabled: true

  KBVSessionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/session
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.SessionHandler::handleRequest
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBWritePolicy:
            TableName: !Ref KBVSessionTable
      Environment:
        Variables:
          IS_LOCAL: false
          KBV_SESSION_TABLE_NAME: !Ref KBVSessionTable
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-kbv-api
      Events:
        KBVSessionFunctionApi:
          Type: Api
          Properties:
            Path: /session
            Method: post
            RestApiId: !Ref KBVSessionApi

  KBVQuestionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/question
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.QuestionHandler::handleRequest
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref KBVSessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref KBVSessionTable
      Environment:
        Variables:
          IS_LOCAL: false
          KBV_SESSION_TABLE_NAME: !Ref KBVSessionTable
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-kbv-api
          EXPERIAN_API_WRAPPER_SAA_RESOURCE: /question-request
          EXPERIAN_API_WRAPPER_URL: https://zn3dus332j.execute-api.eu-west-2.amazonaws.com/dev
      Events:
        KBVQuestionFunctionApi:
          Type: Api
          Properties:
            Path: /question
            Method: get
            RestApiId: !Ref KBVSessionApi

  KBVAnswerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../lambdas/answer
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.QuestionAnswerHandler::handleRequest
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref KBVSessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref KBVSessionTable
      Environment:
        Variables:
          IS_LOCAL: false
          KBV_SESSION_TABLE_NAME: !Ref KBVSessionTable
          POWERTOOLS_SERVICE_NAME: di-ipv-cri-kbv-api
          EXPERIAN_API_WRAPPER_RTQ_RESOURCE: /question-answer
          EXPERIAN_API_WRAPPER_URL: https://zn3dus332j.execute-api.eu-west-2.amazonaws.com/dev
      Events:
        KBVAnswerFunctionApi:
          Type: Api
          Properties:
            Path: /answer
            Method: post
            RestApiId: !Ref KBVSessionApi

  KBVFunctionsCodeSigning:
    Type: AWS::Lambda::CodeSigningConfig
    Properties:
      Description: "Code Signing for KBV API Functions"
      AllowedPublishers:
        SigningProfileVersionArns:
          - "{{resolve:ssm:/dev/credentialIssuers/cri/sam/signingProfileVersionArn}}"
      CodeSigningPolicies:
        UntrustedArtifactOnDeployment: "Enforce"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  KBVSessionApi:
    Description: "API Gateway endpoint URL for KBV API functions to be consumed primarily by the frontend"
    Value: !Sub "https://${KBVSessionApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
  KBVSessionFunction:
    Description: "KBVSessionFunction lambda ARN"
    Value: !GetAtt KBVSessionFunction.Arn
  KBVQuestionFunction:
    Description: "KBVQuestionFunction lambda ARN"
    Value: !GetAtt KBVQuestionFunction.Arn
  KBVAnswerFunction:
    Description: "KBVAnswerFunction lambda ARN"
    Value: !GetAtt KBVAnswerFunction.Arn