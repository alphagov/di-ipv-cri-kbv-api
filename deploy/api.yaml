openapi: "3.0.1"
info:
  title: "Knowledge Base Verification Credential Issuer Api"
  version: "1.0"

paths:
  /session:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Authorization"
        required: true
      responses:
        "201":
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${KBVSessionFunction.Arn}/invocations"
        passthroughBehavior: "when_no_match"
  /question:
    get:
      parameters:
        - $ref: "#/components/parameters/SessionHeader"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
        "204":
          description: "204 response"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${KBVQuestionFunction.Arn}/invocations"
        passthroughBehavior: "when_no_match"
  /answer:
    post:
      parameters:
        - $ref: "#/components/parameters/SessionHeader"
      responses:
        "201":
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Answer"
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-request-validator: "Validate both"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${KBVAnswerFunction.Arn}/invocations"
        passthroughBehavior: "when_no_match"
components:
  parameters:
    SessionHeader:
      name: session-id
      in: header
      description: A UUID generated by the KBV API to act as a primary key for the KBVSessionTable in DynamoDB
      required: true
      schema:
        type: string
  schemas:
    Session:
      type: "object"
      properties:
        session-id:
          type: "string"
    Error:
      title: "Error Schema"
      type: "object"
      properties:
        message:
          type: "string"
    Question:
      type: "object"
      properties:
        questionID:
          type: "string"
        text:
          type: "string"
        tooltip:
          type: "string"
        answerHeldFlag:
          type: "string"
        answerFormat:
          $ref: "#/components/schemas/AnswerFormat"
    AnswerFormat:
      type: "object"
      properties:
        identifier:
          type: "string"
        fieldType:
          type: "string"
        answerList:
          type: array
          items:
            type: "string"
    Answer:
      type: "object"
      properties:
        questionId:
          description: The unique identifier for the question
          maxLength: 6
          type: "string"
        answer:
          description: Answer provided by the user
          maxLength: 50
          type: "string"
    Authorization:
      required:
        - "client_id"
        - "redirect_uri"
        - "request"
        - "response_type"
        - "state"
      type: "object"
      properties:
        response_type:
          type: "string"
          pattern: "^code$"
          example: "code"
        client_id:
          type: "string"
          minLength: 1
          example: "ipv-core-stub"
        state:
          type: "string"
          example: "state"
          minLength: 1
        redirect_uri:
          type: "string"
          format: "uri"
          example: "https://di-ipv-core-stub.london.cloudapps.digital/callback"
        request:
          type: "string"
          pattern: "[a-zA-Z0-9_=]+\\.[a-zA-Z0-9_=]+\\.[a-zA-Z0-9_\\-\\+\\/=]+"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0dCIsImlhdCI6MTUxNjIzOTAyMn0.SbcN-ywpLObhMbbaMCtW1Un8LYhQzHsEth9LvTk4oQQ"

x-amazon-apigateway-request-validators:
  Validate both:
    validateRequestBody: true
    validateRequestParameters: true