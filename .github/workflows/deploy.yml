name: Deploy
on:
  push:
    branches:
      - main
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      AWS_REGION: eu-west-2
      ENVIRONMENT: dev
      STACK_NAME: di-ipv-cri-kbv-api-dev
      ROLLBACK_ACTION: "--disable-rollback"
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Setup SAM
        uses: aws-actions/setup-sam@v1

      - name: Assume temporary AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: ${{ secrets.AWS_ROLE_SESSION }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get signing profile name
        id: code_signing
        run: echo "::set-output name=profile::$(aws ssm get-parameter --region ${{ env.AWS_REGION }} --name '${{ secrets.AWS_PROFILE_PATH }}' | jq '.Parameter.Value')"

      - name: Gradle build
        run: ./gradlew clean build buildZip

      - name: SAM build
        run: sam build -t template.yaml --config-env ${{ env.ENVIRONMENT }}

      - name: SAM Validate
        run: sam validate --region ${{ env.AWS_REGION }} -t template.yaml --config-env ${{ env.ENVIRONMENT }}

      # - name: Upload API config
      #   run: aws s3 cp api.yaml s3://${{ secrets.AWS_CONFIG_BUCKET }}/${{ env.ENVIRONMENT }}/api.yaml

      - name: SAM deploy
        run: |
          sam deploy -t deploy/template.yaml --config-env ${{ env.ENVIRONMENT }} \
            --no-fail-on-empty-changeset --no-confirm-changeset ${{ env.ROLLBACK_ACTION }} \
            --signing-profiles SessionFunction=${{ steps.code_signing.outputs.profile }} \
            --stack-name ${{ env.STACK_NAME }} --s3-bucket di-ipv-cri-lambda-artifact-bucket \
            --s3-prefix ${{ env.STACK_NAME }} --region ${{ env.AWS_REGION }} \
            --capabilities CAPABILITY_IAM
